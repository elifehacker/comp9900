Week1

In week 1, I created a group and gathered 5 new members. It was later downsized to 5 members to meet the requirement of the course. I proposed doing a customer project initially, which was a project to do landscape recognitions and find correlation to the GDP output. It received encouragement from our tutor Iwan and recognition from the team. However, Iwan also suggested the custom project should “focus on end-user / customer / business outcome”. The custom project fell short on business applications hence the team decided to go with project 1 instead. Project 1 is about building a chatbot. The team researched on the topic to affirm that we have the capacity to do it. We also discussed the domains of the chatbot. Entertainment was chosen among others such as medical and education because it is less bounded by potential legal and ethical issues. Then we decided to do further learnings on the tools such as dialog flow to be prepared once the implementation starts. 

Week2

I researched on the dataset that could be used for the entertainment domain. I found a dataset of youtube uses tensorflow which is an industry recognized format invented by Google. A tensorflow file is not readable soI explored further and found the sample code to read it. I also found a dataset of Netflix which uses csv. These information have been documented and shared within the team. In the team meeting, I took note of what Iwan said because one member could not make it to the tutorial. The following day, the team gathered again and discussed and confirmed the 8 objectives. 

Week3

This week I looked into using Facebook’s framework for the chatting service. I followed the tutorial and set up a developer account. However when it comes to running the tunneling application connecting from the local server to the facebook page, there were two authentication exceptions. Same issue has been reported but no valid solution was found online and in the development forum. Hence I proposed using flask to build a simple chat web service as a backup plan for the team while another team member explored the option to use Dialog Flow. Eventually we decided to go with the latter. The team also worked on the proposal document together. I took part in making the architecture diagram and the user story mockups. 

Week4

This week I started playing with the Dialog Flow service. I was able to follow the documentation building a chatbot with the sample code successfully. Then I kept reading source code and the documents learning about how to configure it. By the end of the week. I was able to 1. load the dataset file into gcp datastore 2. give a random movie recommendation in the chatbot 3. create new intents that schedule session to watch a movie with a friend in the chatbot. The changes were done in the GCP console, DialogFlow and in the GCP datalab which run a tunneling app and a flask app. The flask app uses a webhook connecting to the chatbot. It also talk to the datastore nosql backend. This allows flexibilities and creativities to the project.  

Week5

This week I delivered a demo with the rest of team, showcasing what we have achieved. This include some dialogflows, the backends architecture and the dialog flows chart. It went well overall. We also did a review on the first sprint. We agreed on to set earlier deadlines in the next sprint and be more involved in managing jira items. There was also some discussions. It is week 5 and I am the only one who configured the backend of the system. Hence, I suggested everyone to set up the backend as dev environments, because there are significant amount of work. However, it faced some resisitant that Janvi believe tasks could be divided up. She made a great interactive experience within dialogflow, so I was convinced that it was okay to do things as it is eventually. However, I am still concerned about others contribution, because most other members are inexperienced with github so it is difficult to see their progress. I went on to implement sending email inviting to attendees of a scheduled session. The attendee of the session would also be given a link to a simple chatroom implemented with flask. 

Week6

This week I implemented user log in feature in from the chatbot by validating its username and password in the backend. It was done by checking the credential against saved data in the gcp datastore. Then the backend webhook sets a context parameter which could be retrieved in the chatbot in further conversations. 

Week7

This week I integrated the feature I implemented with the frontend Janvi implemented. I also made the meeting scheduling checking the relationship between users before sending out the invite. This was done by checking against the tables in GCP datastore. I also updated the python code that sends email so the meeting invite has the correct time and title. Aside from this, I also walked Janvi through how to use git. After convincing each team member should own the feature that each is developing rathering than having me incharge of the backend alone, I walked the team through the backend I worked on during the lab session, so they could also be autonomous. 

Week8

This week we did the second demo together. Aside from a slight techical difficulty, the demo went well. Team members also reviewed the retrospective report together. 

Week9 WIP

This week I implemented a feature to sent friend requests. 